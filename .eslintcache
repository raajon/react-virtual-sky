[{"/home/ignacy/react/react-virtual-sky/src/VirtualSky/VirtualSky.js":"1","/home/ignacy/react/react-virtual-sky/src/VirtualSky/projections.js":"2","/home/ignacy/react/react-virtual-sky/src/VirtualSky/info.js":"3","/home/ignacy/react/react-virtual-sky/src/VirtualSky/planets.js":"4","/home/ignacy/react/react-virtual-sky/src/VirtualSky/sunAndMoon.js":"5","/home/ignacy/react/react-virtual-sky/src/VirtualSky/grids.js":"6","/home/ignacy/react/react-virtual-sky/src/VirtualSky/constellationLabels.js":"7","/home/ignacy/react/react-virtual-sky/src/VirtualSky/projectionsConfig.js":"8","/home/ignacy/react/react-virtual-sky/src/VirtualSky/galaxy.js":"9","/home/ignacy/react/react-virtual-sky/src/VirtualSky/constellationLines.js":"10","/home/ignacy/react/react-virtual-sky/src/VirtualSky/constllationBoundaries.js":"11","/home/ignacy/react/react-virtual-sky/src/VirtualSky/stars.js":"12","/home/ignacy/react/react-virtual-sky/src/VirtualSky/i18n.js":"13","/home/ignacy/react/react-virtual-sky/src/stories/VirtualSky.stories.js":"14","/home/ignacy/react/react-virtual-sky/src/stories/PolarAligment.stories.js":"15","/home/ignacy/react/react-virtual-sky/src/PolarAligment/PolarAligment.js":"16","/home/ignacy/react/react-virtual-sky/src/PolarAligment/drawers.js":"17"},{"size":5695,"mtime":1613427068266,"results":"18","hashOfConfig":"19"},{"size":7829,"mtime":1664093977653,"results":"20","hashOfConfig":"19"},{"size":692,"mtime":1613080422914,"results":"21","hashOfConfig":"19"},{"size":16249,"mtime":1613416074526,"results":"22","hashOfConfig":"19"},{"size":3282,"mtime":1613080422918,"results":"23","hashOfConfig":"19"},{"size":4006,"mtime":1613347152521,"results":"24","hashOfConfig":"19"},{"size":1324,"mtime":1613416016305,"results":"25","hashOfConfig":"19"},{"size":1694,"mtime":1613085599064,"results":"26","hashOfConfig":"19"},{"size":12184,"mtime":1613080422914,"results":"27","hashOfConfig":"19"},{"size":12660,"mtime":1613080422914,"results":"28","hashOfConfig":"19"},{"size":19898,"mtime":1613080422914,"results":"29","hashOfConfig":"19"},{"size":78357,"mtime":1613415982336,"results":"30","hashOfConfig":"19"},{"size":843,"mtime":1613415954000,"results":"31","hashOfConfig":"19"},{"size":3801,"mtime":1664313233575,"results":"32","hashOfConfig":"19"},{"size":816,"mtime":1664389013833,"results":"33","hashOfConfig":"19"},{"size":1520,"mtime":1664399569121,"results":"34","hashOfConfig":"19"},{"size":2877,"mtime":1664400321644,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"jzlgj4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ignacy/react/react-virtual-sky/src/VirtualSky/VirtualSky.js",["75"],"import React, {useState, useEffect, useRef, useLayoutEffect} from 'react';\nimport d3 from 'd3'\nimport projectionsConfig from '../VirtualSky/projectionsConfig.js';\nimport {calcConstellationLines, drawConstellationLines} from './constellationLines.js';\nimport {calcConstellationLabels, drawConstellationLabels} from './constellationLabels.js';\nimport {calcBoundaries, drawBoundaries} from './constllationBoundaries.js';\nimport {calcGalaxy, drawGalaxy} from './galaxy.js';\nimport {calcGridAz, calcGridEq, calcGridGal, drawGridAz, drawGridEq, drawGridGal, drawAz} from './grids.js';\nimport {drawStars} from './stars.js';\nimport {drawMoonAndSun} from './sunAndMoon.js';\nimport {calcPlanets, drawPlanets, drawPlanetOrbits, drawPlanetLabels} from './planets.js';\nimport {drawInfo} from './info.js';\nimport {stereo} from './projections.js'\n\nlet  clickAz = null;\nlet stars = [];\nlet planets = [];\nlet svg = null;\nlet azOff = 0;\nlet azOffOff = 0;\n\nconst VirtualSky = (props) => {\n  if(azOff !== (props.config.azOff%360)-180){\n    azOff = (props.config.azOff%360)-180;\n    azOffOff = 0;\n  }\n\n  const r2d = 180.0/Math.PI;\n  const targetRef = useRef();\n  const time = props.config.time || new Date()\n  const visibility = props.config.visibility;\n  const starMag = visibility.starMag || 2;\n  const config = projectionsConfig(props.config.width, props.config.height, props.config.latitude, props.config.longitude, props.config.language, time)\n  const skyColors = props.config.skyColors || [ 'rgb(0,0,0)' ];\n  const gridAzColor = props.config.gridAzColor;\n  const gridEqColor = props.config.gridEqColor;\n  const gridGalColor = props.config.gridGalColor;\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      config.width = config.width || targetRef.current.offsetWidth;\n      config.height = config.height || targetRef.current.offsetHeight;\n    }\n  }, [config]);\n\n  useEffect(() => {\n    svg = drawCanvas();\n    draw(svg, azOff, stars);\n  });\n\n  const draw = (svg, stars) =>{\n      const start = new Date().getTime();\n      const azO = azOff + azOffOff;\n      if(visibility.showGalaxy){\n        calcGalaxy(stereo, azO, config);\n        drawGalaxy(svg);\n      }\n      if(visibility.showAzGrid){\n        calcGridAz(stereo, azO, config);\n        drawGridAz(svg, gridAzColor);\n      }\n      if(visibility.showEqGrid){\n        calcGridEq(stereo, azO, config);\n        drawGridEq(svg, gridEqColor);\n      }\n      if(visibility.showGalGrid){\n        calcGridGal(stereo, azO, config);\n        drawGridGal(svg, gridGalColor);\n      }\n      if(visibility.showConstellations){\n        calcConstellationLines(stereo, azO, config);\n        drawConstellationLines(svg, config);\n      }\n      if(visibility.showConstellationBoundaries){\n        calcBoundaries(stereo, azO, config);\n        drawBoundaries(svg, config);\n      }\n      drawStars(svg, stereo, azO, config, starMag, visibility.showStarLabels);\n      if(visibility.showPlanets || visibility.showPlanetsLabels || visibility.showPlanetsOrbit){\n        calcPlanets(stereo, azO, config);\n        if(visibility.showPlanets) drawPlanets(svg);\n        if(visibility.showPlanetsLabels) drawPlanetLabels(svg);\n        if(visibility.showPlanetsOrbit) drawPlanetOrbits(svg);\n      }\n      if(visibility.showSunMoon){\n        drawMoonAndSun(svg, stereo, azO, config);\n      }\n      if(visibility.showConstellationLabels){\n        calcConstellationLabels(stereo, azO, config);\n        drawConstellationLabels(svg);\n      }\n      if(visibility.showAzLabels){\n        drawAz(svg, stereo, azO, config);\n      }\n      const rendTime = new Date().getTime() - start + \"ms\";\n      if(visibility.showInfo){\n        drawInfo(svg, config, rendTime);\n      }\n  }\n\n  const drawCanvas = () =>{\n    d3.select(\"#\" + props.id).select(\"svg\").remove();\n    const svg = d3.select(\"#\" + props.id).append(\"svg\")\n        .attr(\"width\", config.width)\n        .attr(\"height\", config.height)\n        .style(\"background\", \"black\")\n       .on('mousedown', onDown)\n       .on('touchstart', onDown)\n       .on('mousemove', onMove)\n       .on('touchmove', onMove)\n       .on('mouseup', onUp)\n       .on('touchend', onUp)\n\n       makeBackground(svg);\n   return svg;\n  }\n\n  const onDown = (d) =>{\n    const pos = stereo.xy2azel(...d3.mouse(svg.node()), config.width, config.height);\n    clickAz = pos.az;\n  }\n\n  const onMove = (d) =>{\n    if(clickAz){\n      const pos = stereo.xy2azel(...d3.mouse(svg.node()), config.width, config.height);\n      // const newAzOff = azOff + (clickAz - pos.az )*r2d;\n      azOffOff = (clickAz - pos.az )*r2d;\n      draw(svg, stars, planets)\n    }\n  }\n\n  const onUp = (d) =>{\n    const pos = stereo.xy2azel(...d3.mouse(svg.node()), config.width, config.height);\n    // azOff = azOff + (clickAz - pos.az )*r2d;\n    azOffOff = (clickAz - pos.az )*r2d;\n    clickAz = null;\n    draw(svg, stars, planets)\n  }\n\n  const makeBackground = (svg) =>{\n    const grad = svg.append('defs')\n       .append('linearGradient')\n       .attr('id', 'grad')\n       .attr('x1', '0%')\n       .attr('x2', '0%')\n       .attr('y1', '50%')\n       .attr('y2', '100%');\n\n     grad.selectAll('stop')\n       .data(skyColors)\n       .enter()\n       .append('stop')\n       .style('stop-color', function(d){ return d; })\n       .attr('offset', function(d,i){\n         return 100 * (i / (skyColors.length - 1)) + '%';\n       })\n\n     svg.append('rect')\n       .attr('x', 0)\n       .attr('y', 0)\n       .attr('width', config.width)\n       .attr('height', config.height)\n       .style('fill', 'url(#grad)');\n  }\n\n  return (\n    <div ref={targetRef} style={{bottom: \"0px\", top: \"0px\", right: \"0px\", left: \"0px\", position: \"absolute\"}}>\n      <div id={props.id}/>\n    </div>\n  );\n};\n\nexport default VirtualSky;\n",["76","77"],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/projections.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/info.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/planets.js",["78","79","80"],"import {interpolate} from './projections.js';\nimport {radec2xy} from './projections.js';\nimport {i18n} from './i18n.js';\nimport d3 from 'd3'\n\nconst d2r = Math.PI/180;\nconst r2d = 180.0/Math.PI;\nconst AUinkm = 149597870.700;\n\nlet planets = [];\n\nexport const calcPlanets = (projection, azOff, config) =>{\n  const lang = config.language || 'en';\n  const translates = i18n(lang);\n\tconst days = 365.25;\n  const jd = config.astronomicalTimes.JD;\n\tconst planetsBuilded = build(Math.floor(jd)-days*0.25,days*1.25);\n  planets = [];\n\n  planetsBuilded.forEach((p, i) => {\n    if(p[2].length%4 === 0){\n      if(jd > p[2][0] && jd < p[2][(p[2].length-4)]){\n        const interp = interpolate(jd,p[2]);\n        const planet = {\n          name: translates.planets[p[0]] || p[0],\n          orbit: [],\n          ra: interp.ra,\n          dev: interp.dec,\n          mag: interp.mag,\n          color: p[1],\n          ...radec2xy(interp.ra*d2r, interp.dec*d2r, projection, azOff, config)\n        }\n        planets.push(planet);\n        let o = 0;\n        planet.orbit[o] = []\n  \t\t\tfor(let i = 0 ; i < p[2].length-4 ; i+=4){\n          const point = radec2xy(p[2][i+1]*d2r, p[2][i+2]*d2r, projection, azOff, config)\n          if(typeof point === \"object\"){\n            planet.orbit[o].push(point);\n          }else{\n            planet.orbit[++o] = [];\n          }\n        }\n      }\n    }\n  });\n}\n\nexport const drawPlanets = (svg) =>{\n  const pp = planets.filter(s=>(isVisible(s.el) && !isNaN(s.x) && !isPointBad(s)));\n\n  const circles = svg.selectAll('.planet');\n  const databoundCircles = circles.data(pp);\n  databoundCircles.enter().append('circle').attr('class','planet');;\n  databoundCircles.exit().remove();\n  databoundCircles\n      .attr(\"cx\", (d) =>{ return d.x; })\n      .attr(\"cy\", (d) =>{ return d.y; })\n      .attr(\"r\", (d) =>{ return d.mag ? (9-d.mag) : 0; })\n      .style(\"fill\", (d) =>{ return d.color; });\n}\n\nexport const drawPlanetOrbits = (svg) =>{\n  planets.forEach((planet, i) => {\n    planet.orbit = planet.orbit.filter(o=>o.length>0);\n  });\n\n  planets.forEach((planet, i) => {\n    const orbits = svg.selectAll('.planetOrbit' + planet.name);\n    const databoundOrbits = orbits.data(planet.orbit);\n    databoundOrbits.enter().append('path').attr('class','planetOrbit' + planet.name);;\n    databoundOrbits.exit().remove();\n    databoundOrbits\n        .attr(\"d\", (d)=>lineFunction(d))\n        .attr(\"stroke\", planet.color)\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"none\");\n  });\n}\n\nexport const drawPlanetLabels = (svg) =>{\n    const labels = svg.selectAll('.planetLabels');\n    const databoundLabels = labels.data(planets);\n    databoundLabels.enter().append('text').attr('class','planetLabels');;\n    databoundLabels.exit().remove();\n    databoundLabels\n      .attr(\"x\", (d) =>{ return d.x; })\n      .attr(\"y\", (d) =>{ return d.y; })\n      .attr(\"dx\", (d) =>{ return 5; })\n      .attr(\"fill\", (d) =>{ return d.color; })\n      .attr(\"font-size\", \".7em\")\n      .attr(\"font-family\", \"Arial\")\n      .text( (d) =>{ return d.name; });\n}\n\n\nconst lineFunction = d3.svg.line()\n  .x(d =>{ return d.x; })\n  .y(d =>{ return d.y; })\n  .interpolate(\"linear\");\n\nconst isVisible = (el) =>{\n\treturn el > 0;\n};\nconst isPointBad = (p) =>{\n\treturn p.x===-1 && p.y===-1;\n};\n\nconst planetsDefinitions2 = [{\n\t\"name\": \"Me\",\n\t\"radius\":2439.7,\t// km\n\t\"interval\": 0.5,\n\t\"colour\": \"rgb(170,150,170)\",\n\t\"magnitude\": function(d){ return -0.36 + 5*log10(d.r*d.R) + 0.027 * d.FV + 2.2E-13 * Math.pow(d.FV,6); },\n\t\"elements\": [\n\t\t{\"jd\":2456280.5,\"i\":7.0053,\"o\":48.485,\"p\":77.658,\"a\":0.387100,\"n\":4.09232,\"e\":0.205636,\"L\":191.7001},\n\t\t{\"jd\":2456360.5,\"i\":7.0052,\"o\":48.487,\"p\":77.663,\"a\":0.387098,\"n\":4.09235,\"e\":0.205646,\"L\":159.0899},\n\t\t{\"jd\":2456440.5,\"i\":7.0052,\"o\":48.490,\"p\":77.665,\"a\":0.387097,\"n\":4.09236,\"e\":0.205650,\"L\":126.4812},\n\t\t{\"jd\":2456520.5,\"i\":7.0052,\"o\":48.493,\"p\":77.669,\"a\":0.387098,\"n\":4.09235,\"e\":0.205645,\"L\":93.8725},\n\t\t{\"jd\":2456600.5,\"i\":7.0052,\"o\":48.495,\"p\":77.672,\"a\":0.387099,\"n\":4.09234,\"e\":0.205635,\"L\":61.2628},\n\t\t{\"jd\":2456680.5,\"i\":7.0052,\"o\":48.498,\"p\":77.677,\"a\":0.387098,\"n\":4.09234,\"e\":0.205633,\"L\":28.6524}\n\t]\n},{\n\t\"name\": \"V\",\n\t\"radius\": 6051.9,\t// km\n\t\"interval\": 1,\n\t\"colour\": \"rgb(245,222,179)\",\n\t\"magnitude\": function(d){ return -4.34 + 5*log10(d.a*d.R) + 0.013 * d.FV + 4.2E-7*Math.pow(d.FV,3); },\n\t\"elements\": [\n\t\t{\"jd\":2456280.5,\"i\":3.3949,\"o\":76.797,\"p\":132.00,\"a\":0.723328,\"n\":1.60214,\"e\":0.006777,\"L\":209.0515},\n\t\t{\"jd\":2456360.5,\"i\":3.3949,\"o\":76.799,\"p\":132.07,\"a\":0.723327,\"n\":1.60215,\"e\":0.006787,\"L\":337.2248},\n\t\t{\"jd\":2456440.5,\"i\":3.3949,\"o\":76.802,\"p\":131.97,\"a\":0.723333,\"n\":1.60213,\"e\":0.006780,\"L\":105.3980},\n\t\t{\"jd\":2456520.5,\"i\":3.3949,\"o\":76.804,\"p\":131.99,\"a\":0.723327,\"n\":1.60215,\"e\":0.006769,\"L\":233.5729},\n\t\t{\"jd\":2456600.5,\"i\":3.3949,\"o\":76.807,\"p\":132.03,\"a\":0.723326,\"n\":1.60215,\"e\":0.006775,\"L\":1.7475},\n\t\t{\"jd\":2456680.5,\"i\":3.3948,\"o\":76.808,\"p\":131.63,\"a\":0.723345,\"n\":1.60209,\"e\":0.006770,\"L\":129.9169}\n\t]\n},{\n\t\"name\":\"E\",\n\t\"elements\" : [\n\t\t{\"jd\":2450680.5,\"i\":0.00041,\"o\":349.2,\"p\":102.8517,\"a\":1.0000200,\"n\":0.9855796,\"e\":0.0166967,\"L\":328.40353},\n\t\t{\"jd\":2456320.5,\"i\":0.0,\"o\":349.2,\"p\":103.005,\"a\":0.999986,\"n\":0.985631,\"e\":0.016682,\"L\":127.4201},\n\t\t{\"jd\":2456400.5,\"i\":0.0,\"o\":349.2,\"p\":103.022,\"a\":0.999987,\"n\":0.985630,\"e\":0.016677,\"L\":206.2740},\n\t\t{\"jd\":2456480.5,\"i\":0.0,\"o\":349.2,\"p\":103.119,\"a\":1.000005,\"n\":0.985603,\"e\":0.016675,\"L\":285.1238},\n\t\t{\"jd\":2456560.5,\"i\":0.0,\"o\":349.2,\"p\":103.161,\"a\":0.999995,\"n\":0.985618,\"e\":0.016682,\"L\":3.9752},\n\t\t{\"jd\":2456680.5,\"i\":0.0,\"o\":349.2,\"p\":103.166,\"a\":1.000005,\"n\":0.985603,\"e\":0.016693,\"L\":122.2544}\n\t]\n},{\n\t\"name\":\"Ma\",\n\t\"radius\": 3386,\t// km\n\t\"interval\": 1,\n\t\"colour\": \"rgb(255,50,50)\",\n\t\"magnitude\": function(d){ return -1.51 + 5*log10(d.r*d.R) + 0.016 * d.FV; },\n\t\"elements\":[\n\t\t{\"jd\":2450680.5,\"i\":1.84992,\"o\":49.5664,\"p\":336.0882,\"a\":1.5236365,\"n\":0.5240613,\"e\":0.0934231,\"L\":262.42784},\n\t\t{\"jd\":2456320.5,\"i\":1.8497,\"o\":49.664,\"p\":336.249,\"a\":1.523605,\"n\":0.524079,\"e\":0.093274,\"L\":338.1493},\n\t\t{\"jd\":2456400.5,\"i\":1.8497,\"o\":49.666,\"p\":336.268,\"a\":1.523627,\"n\":0.524068,\"e\":0.093276,\"L\":20.0806},\n\t\t{\"jd\":2456480.5,\"i\":1.8496,\"o\":49.668,\"p\":336.306,\"a\":1.523731,\"n\":0.524014,\"e\":0.093316,\"L\":62.0048},\n\t\t{\"jd\":2456560.5,\"i\":1.8495,\"o\":49.666,\"p\":336.329,\"a\":1.523748,\"n\":0.524005,\"e\":0.093385,\"L\":103.9196},\n\t\t{\"jd\":2456680.5,\"i\":1.8495,\"o\":49.665,\"p\":336.330,\"a\":1.523631,\"n\":0.524066,\"e\":0.093482,\"L\":166.8051}\n\t]\n},{\n\t\"name\":\"J\",\n\t\"radius\": 69173,\t// km\n\t\"interval\": 10,\n\t\"colour\": \"rgb(255,150,150)\",\n\t\"magnitude\": function(d){ return -9.25 + 5*log10(d.r*d.R) + 0.014 * d.FV; },\n\t\"elements\":[\n\t\t{\"jd\":2456280.5,\"i\":1.3033,\"o\":100.624,\"p\":14.604,\"a\":5.20269,\"n\":0.083094,\"e\":0.048895,\"L\":68.0222},\n\t\t{\"jd\":2456360.5,\"i\":1.3033,\"o\":100.625,\"p\":14.588,\"a\":5.20262,\"n\":0.083095,\"e\":0.048895,\"L\":74.6719},\n\t\t{\"jd\":2456440.5,\"i\":1.3033,\"o\":100.627,\"p\":14.586,\"a\":5.20259,\"n\":0.083096,\"e\":0.048892,\"L\":81.3228},\n\t\t{\"jd\":2456520.5,\"i\":1.3033,\"o\":100.629,\"p\":14.556,\"a\":5.20245,\"n\":0.083099,\"e\":0.048892,\"L\":87.9728},\n\t\t{\"jd\":2456600.5,\"i\":1.3033,\"o\":100.631,\"p\":14.576,\"a\":5.20254,\"n\":0.083097,\"e\":0.048907,\"L\":94.6223},\n\t\t{\"jd\":2456680.5,\"i\":1.3033,\"o\":100.633,\"p\":14.592,\"a\":5.20259,\"n\":0.083096,\"e\":0.048891,\"L\":101.2751}\n\t]\n},{\n\t\"name\":\"S\",\n\t\"radius\": 57316,\t// km\n\t\"interval\": 10,\n\t\"colour\": \"rgb(200,150,150)\",\n\t\"magnitude\": function(d){\n\t\tvar slon = Math.atan2(d.y,d.x);\n\t\tvar slat = Math.atan2(d.z, Math.sqrt(d.x*d.x + d.y*d.y));\n\t\twhile(slon < 0){ slon += 2*Math.PI; }\n\t\twhile(slon >= 360){ slon -= 2*Math.PI; }\n\t\tvar ir = d.d2r*28.06;\n\t\tvar Nr = d.d2r*(169.51 + 3.82E-5 * (d.jd-2451543.5));\t// Compared to J2000 epoch\n\t\tvar B = Math.asin(Math.sin(slat) * Math.cos(ir) - Math.cos(slat) * Math.sin(ir) * Math.sin(slon-Nr));\n\t\treturn -9.0  + 5*log10(d.r*d.R) + 0.044 * d.FV + (-2.6 * Math.sin(Math.abs(B)) + 1.2 * Math.pow(Math.sin(B),2));\n\t},\n\t\"elements\":[\n\t\t{\"jd\":2456280.5,\"i\":2.4869,\"o\":113.732,\"p\":90.734,\"a\":9.51836,\"n\":0.033583,\"e\":0.055789,\"L\":208.6057},\n\t\t{\"jd\":2456360.5,\"i\":2.4869,\"o\":113.732,\"p\":90.979,\"a\":9.52024,\"n\":0.033574,\"e\":0.055794,\"L\":211.2797},\n\t\t{\"jd\":2456440.5,\"i\":2.4869,\"o\":113.732,\"p\":91.245,\"a\":9.52234,\"n\":0.033562,\"e\":0.055779,\"L\":213.9525},\n\t\t{\"jd\":2456520.5,\"i\":2.4869,\"o\":113.732,\"p\":91.500,\"a\":9.52450,\"n\":0.033551,\"e\":0.055724,\"L\":216.6279},\n\t\t{\"jd\":2456600.5,\"i\":2.4870,\"o\":113.732,\"p\":91.727,\"a\":9.52630,\"n\":0.033541,\"e\":0.055691,\"L\":219.3014},\n\t\t{\"jd\":2456680.5,\"i\":2.4870,\"o\":113.733,\"p\":92.021,\"a\":9.52885,\"n\":0.033528,\"e\":0.055600,\"L\":221.9730}\n\t]\n},{\n\t\"name\":\"U\",\n\t\"radius\": 25266,\t// km\n\t\"interval\": 20,\n\t\"colour\": \"rgb(130,150,255)\",\n\t\"magnitude\": function(d){ return -7.15 + 5*log10(d.r*d.R) + 0.001 * d.FV; },\n\t\"elements\":[\n\t\t{\"jd\":2456280.5,\"i\":0.7726,\"o\":74.004,\"p\":169.227,\"a\":19.2099,\"n\":0.011713,\"e\":0.046728,\"L\":9.1400},\n\t\t{\"jd\":2456360.5,\"i\":0.7727,\"o\":73.997,\"p\":169.314,\"a\":19.2030,\"n\":0.011720,\"e\":0.047102,\"L\":10.0873},\n\t\t{\"jd\":2456440.5,\"i\":0.7728,\"o\":73.989,\"p\":169.434,\"a\":19.1953,\"n\":0.011727,\"e\":0.047509,\"L\":11.0340},\n\t\t{\"jd\":2456520.5,\"i\":0.7728,\"o\":73.989,\"p\":169.602,\"a\":19.1882,\"n\":0.011733,\"e\":0.047874,\"L\":11.9756},\n\t\t{\"jd\":2456600.5,\"i\":0.7728,\"o\":73.985,\"p\":169.740,\"a\":19.1816,\"n\":0.011739,\"e\":0.048215,\"L\":12.9200},\n\t\t{\"jd\":2456680.5,\"i\":0.7728,\"o\":73.983,\"p\":169.962,\"a\":19.1729,\"n\":0.011747,\"e\":0.048650,\"L\":13.8617}\n\t]\n},{\n\t\"name\":\"N\",\n\t\"radius\": 24553,\t// km\n\t\"interval\": 20,\n\t\"colour\": \"rgb(100,100,255)\",\n\t\"magnitude\": function(d){ return -6.90 + 5*log10(d.r*d.R) + 0.001 * d.FV; },\n\t\"elements\":[\n\t\t{\"jd\":2456280.5,\"i\":1.7686,\"o\":131.930,\"p\":53.89,\"a\":30.0401,\"n\":0.005990,\"e\":0.010281,\"L\":333.6121},\n\t\t{\"jd\":2456360.5,\"i\":1.7688,\"o\":131.935,\"p\":56.47,\"a\":30.0259,\"n\":0.005994,\"e\":0.010138,\"L\":334.0856},\n\t\t{\"jd\":2456440.5,\"i\":1.7690,\"o\":131.940,\"p\":59.24,\"a\":30.0108,\"n\":0.005999,\"e\":0.009985,\"L\":334.5566},\n\t\t{\"jd\":2456520.5,\"i\":1.7692,\"o\":131.946,\"p\":61.52,\"a\":29.9987,\"n\":0.006002,\"e\":0.009816,\"L\":335.0233},\n\t\t{\"jd\":2456600.5,\"i\":1.7694,\"o\":131.951,\"p\":63.84,\"a\":29.9867,\"n\":0.006006,\"e\":0.009690,\"L\":335.4937},\n\t\t{\"jd\":2456680.5,\"i\":1.7697,\"o\":131.957,\"p\":66.66,\"a\":29.9725,\"n\":0.006010,\"e\":0.009508,\"L\":335.9564}\n\t]\n}];\n\n// Build an array containing all the planets\n// Inputs:\n//  jd = the Julian Date to calculate from\n//  days = the number of days to calculate ephemerides for\nconst build = (jd,days) =>{\n\tvar arr = new Array(planetsDefinitions2.length-1);\n\tvar b = 0;\n\tif(!days) days = 365.25;\n\tfor(var a = 0 ; a < planetsDefinitions2.length ; a++){\n\t\tif(planetsDefinitions2[a].colour) arr[b++] = buildPlanet(a,jd,days);\n\t}\n\treturn arr;\n}\n\n// Build the data array for a particular planet\n// Inputs:\n//  planet = the ID of the planet\n//  jd = the Julian Date to calculate from\n//  days = the number of days to calculate ephemerides for\nconst buildPlanet = (planet,jd,days) =>{\n\tvar p,coord,interval,n,jdcurr;\n\tif(typeof planet===\"number\"){\n\t\tp = planet;\n\t}else{\n\t\tvar match = -1;\n\t\tfor(var a = 0 ; a < planetsDefinitions2.length ; a++){\n\t\t\tif(planetsDefinitions2[a].name===planet) match = a;\n\t\t}\n\t\tif(match < 0) return this;\n\t\tif(match === 2) return this;\t// Can't calculate Earth\n\t\tp = match;\n\t}\n\n\tinterval = (typeof planetsDefinitions2[p].interval===\"number\" ? planetsDefinitions2[p].interval : 1);\n\n\t// Build an array of the form:\n\t// [Planet name,colour,[jd_1, ra_1, dec_1, mag_1, jd_2, ra_2, dec_2, mag_2....]]\n\tn = Math.floor(days/interval);\n\tvar arr = new Array(3);\n\tarr[0] = planetsDefinitions2[p][\"name\"];\n\tarr[1] = planetsDefinitions2[p][\"colour\"];\n\tarr[2] = new Array(n*4);\n\n\tjdcurr = jd;\n\tfor(var i = 0 ; i < n; i++){\n\t\tjdcurr += interval;\n\t\tcoord = getEphem(p,jdcurr);\n\t\tarr[2][i*4+0] = jdcurr;\n\t\tarr[2][i*4+1] = coord[0];\n\t\tarr[2][i*4+2] = coord[1];\n\t\tarr[2][i*4+3] = coord[2];\n\t}\n\treturn arr;\n}\n\n// Get the ephemeris for the specified planet number\n// Input:\n//   planet = ID\n//   day = Julian Date to calculate the ephemeris for\n// Method from http://www.stargazing.net/kepler/ellipse.html#twig06\nconst getEphem = (planet,day) =>{\n\n\tvar i,v,e,x,y,z,ec,q,ra,dc,R,mag,FV,phase;\n\n\tif(typeof planet===\"number\"){\n\t\ti = planet;\n\t}else{\n\t\tvar match = -1;\n\t\tfor(var a = 0 ; a < planetsDefinitions2.length ; a++){\n\t\t\tif(planetsDefinitions2[a].name===planet) match = a;\n\t\t}\n\t\tif(match < 0) return this;\n\t\tif(match === 2) return this;\t// Can't calculate Earth\n\t\ti = match;\n\t}\n\n\t// Heliocentric coordinates of planet\n\tv = getHeliocentric(planetsDefinitions2[i],day);\n\n\t// Heliocentric coordinates of Earth\n\te = getHeliocentric(planetsDefinitions2[2],day);\n\n\t// Geocentric ecliptic coordinates of the planet\n\tx = v.xyz[0] - e.xyz[0];\n\ty = v.xyz[1] - e.xyz[1];\n\tz = v.xyz[2] - e.xyz[2];\n\n\t// Geocentric equatorial coordinates of the planet\n\tec = 23.439292*d2r; // obliquity of the ecliptic for the epoch the elements are referred to\n\tq = [x,y * Math.cos(ec) - z * Math.sin(ec),y * Math.sin(ec) + z * Math.cos(ec)];\n\n\tra = Math.atan(q[1]/q[0])*r2d;\n\tif(q[0] < 0) ra += 180;\n\tif(q[0] >= 0 && q[1] < 0) ra += 360;\n\n\tdc = Math.atan(q[2] / Math.sqrt(q[0]*q[0] + q[1]*q[1]))*r2d;\n\n\tR = Math.sqrt(q[0]*q[0] + q[1]*q[1] + q[2]*q[2]);\n\n\t// Calculate the magnitude (http://stjarnhimlen.se/comp/tutorial.html)\n\tvar angdiam = (planetsDefinitions2[i].radius*2/(R*AUinkm));//TODO: calculate planets magnitude\n\tmag = 1;\n\n\t// planet's heliocentric distance, v.r, its geocentric distance, R, and the distance to the Sun, e.r.\n\tFV = Math.acos( ( v.r*v.r + R*R - e.r*e.r ) / (2*v.r*R) );\n\tphase = (1 + Math.cos(FV))/2;\n\tmag = planetsDefinitions2[i].magnitude({a:v.r,r:v.r,R:R,FV:FV*r2d,x:x,y:y,z:z,jd:day,d2r:d2r});\n\n\treturn [ra,dc,mag];\n}\n\nconst getHeliocentric = (planet,jd,i) =>{\n\tvar min = 1e10;\n\tvar mn,p,d,M,v,r;\n\n\t// Choose a set of orbital elements\n\tif(!i){\n\t\t// Loop over elements and pick the one closest in time\n\t\tfor(var j = 0; j < planet.elements.length ;j++){\n\t\t\tmn = Math.abs(planet.elements[j].jd-jd);\n\t\t\tif(mn < min){\n\t\t\t\ti = j;\n\t\t\t\tmin = mn;\n\t\t\t}\n\t\t}\n\t}\n\tp = planet.elements[i];\n\n\t// The day number is the number of days (decimal) since epoch of elements.\n\td = (jd - p.jd);\n\n\t// Heliocentric coordinates of planet\n\tM = meanAnomaly(p.n,d,p.L,p.p)\n\tv = trueAnomaly(M*d2r,p.e,10);\n\tr = p.a * (1 - Math.pow(p.e,2)) / (1 + p.e * Math.cos(v*d2r));\n\treturn {xyz: heliocentric(v*d2r,r,p.p*d2r,p.o*d2r,p.i*d2r), M:M, v:v, r:r, i:i, d:d, elements:p};\n}\n\n// Find the Mean Anomaly (M, degrees) of the planet where\n//  n is daily motion\n//  d is the number of days since the date of the elements\n//  L is the mean longitude (deg)\n//  p is the longitude of perihelion (deg)\n//  M should be in range 0 to 360 degrees\nconst meanAnomaly = function(d,n,L,p){\n\tvar M = n * d + L - p;\n\twhile(M < 0){ M += 360; }\n\twhile(M >= 360){ M -= 360; }\n\treturn M;\n}\n\n// Heliocentric coordinates of the planet where:\n//  o is longitude of ascending node (radians)\n//  p is longitude of perihelion (radians)\n//  i is inclination of plane of orbit (radians)\n// the quantity v + o - p is the angle of the planet measured in the plane of the orbit from the ascending node\nconst heliocentric = function(v,r,p,o,i){\n\tvar vpo = v + p - o;\n\tvar svpo = Math.sin(vpo);\n\tvar cvpo = Math.cos(vpo);\n\tvar co = Math.cos(o);\n\tvar so = Math.sin(o);\n\tvar ci = Math.cos(i);\n\tvar si = Math.sin(i);\n\treturn [r * (co * cvpo - so * svpo * ci),r * (so * cvpo + co * svpo * ci),r * (svpo * si)]\n}\n\n// Find the True Anomaly given\n// m  -  the 'mean anomaly' in orbit theory (in radians)\n// ecc - the eccentricity of the orbit\nconst trueAnomaly = function(m,ecc,eps){\n\tvar e = m;        // first guess\n\n\tif(typeof eps===\"number\"){\n\t\tvar delta = 0.05; // set delta equal to a dummy value\n\t\tvar eps = 10;     // eps - the precision parameter - solution will be within 10^-eps of the true value. Don't set eps above 14, as convergence can't be guaranteed\n\n\t\twhile(Math.abs(delta) >= Math.pow(10,-eps)){    // converged?\n\t\t\tdelta = e - ecc * Math.sin(e) - m;          // new error\n\t\t\te -= delta / (1 - ecc * Math.cos(e));    // corrected guess\n\t\t}\n\t\tvar v = 2 * Math.atan(Math.pow(((1 + ecc) / (1 - ecc)),0.5) * Math.tan(0.5 * e));\n\t\tif(v < 0) v+= Math.PI*2;\n\t}else{\n\t\tv = m + ( (2 * ecc - Math.pow(ecc,3)/4)*Math.sin(m) + 1.25*Math.pow(ecc,2)*Math.sin(2*m) + (13/12)*Math.pow(ecc,3)*Math.sin(3*m) );\n\t}\n\treturn v*r2d; // return estimate\n}\n\nconst log10 = (x) =>{\n\treturn Math.LOG10E * Math.log(x);\n}\n","/home/ignacy/react/react-virtual-sky/src/VirtualSky/sunAndMoon.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/grids.js",["81"],"import {azel2xy, ecliptic2xy, radec2xy, gal2xy} from './projections.js';\nimport d3 from 'd3'\n\nconst d2r = Math.PI/180;\nlet gridAz = [];\nlet gridEq = [];\nlet gridGal = [];\n\nexport const calcGridAz = (stereo, azOff, config) =>{\n  gridAz = [];\n  for(let j =-80; j<=80; j+=40){\n    const line = [];\n    for(let i =0; i<=360; i+=10){\n      line.push({ra: i, dec: j, ...azel2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridAz.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n\n  for(let i =0; i<=360; i+=30){\n    const line = [];\n    for(let j =-85; j<=85; j+=5){\n      line.push({ra: i, dec: j, ...azel2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridAz.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n}\n\nexport const calcGridEq = (stereo, azOff, config) =>{\n  gridEq = [];\n  for(let j =-80; j<=80; j+=40){\n    const line = [];\n    for(let i =0; i<=360; i+=10){\n      line.push({ra: i, dec: j, ...radec2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridEq.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n\n  for(let i =0; i<=360; i+=30){\n    const line = [];\n    for(let j =-85; j<=85; j+=5){\n      line.push({ra: i, dec: j, ...radec2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridEq.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n}\n\nexport const calcGridGal = (stereo, azOff, config) =>{\n  gridGal = [];\n  for(let j =-80; j<=80; j+=40){\n    const line = [];\n    for(let i =0; i<=360; i+=10){\n      line.push({ra: i, dec: j, ...gal2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridGal.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n\n  for(let i =0; i<=360; i+=30){\n    const line = [];\n    for(let j =-85; j<=85; j+=5){\n      line.push({ra: i, dec: j, ...gal2xy(i*d2r, j*d2r, stereo, azOff, config)});\n    }\n    gridGal.push(line.filter(l=> !isNaN(l.x) && !isNaN(l.y) ));\n  }\n}\n\nexport const drawGridAz = (svg, color) =>{\n    const lines = svg.selectAll('.gridaz');\n    const databoundGridAz = lines.data(gridAz);\n    databoundGridAz.enter().append('path').attr('class','gridaz');;\n    databoundGridAz.exit().remove();\n    databoundGridAz\n        .attr(\"d\", d=>lineFunction(d))\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"none\");\n}\n\nexport const drawGridEq = (svg, color) =>{\n    const lines = svg.selectAll('.grideq');\n    const databoundGridEq = lines.data(gridEq);\n    databoundGridEq.enter().append('path').attr('class','grideq');;\n    databoundGridEq.exit().remove();\n    databoundGridEq\n        .attr(\"d\", d=>lineFunction(d))\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"none\");\n}\n\nexport const drawGridGal = (svg, color) =>{\n    const lines = svg.selectAll('.gridgal');\n    const databoundGridGal = lines.data(gridGal);\n    databoundGridGal.enter().append('path').attr('class','gridgal');;\n    databoundGridGal.exit().remove();\n    databoundGridGal\n        .attr(\"d\", d=>lineFunction(d))\n        .attr(\"stroke\", color)\n        .attr(\"stroke-width\", 1)\n        .attr(\"fill\", \"none\");\n}\n\nexport const drawAz = (svg, stereo, azOff, config) =>{\n  const az = [\n    {l:\"N\", ...azel2xy(0*d2r, 2*d2r, stereo, azOff, config)},\n    {l:\"E\", ...azel2xy(90*d2r, 2*d2r, stereo, azOff, config)},\n    {l:\"S\", ...azel2xy(180*d2r, 2*d2r, stereo, azOff, config)},\n    {l:\"W\", ...azel2xy(270*d2r, 2*d2r, stereo, azOff, config)}\n  ];\n\n  const labels = svg.selectAll('.azLabels');\n  const databoundLabels = labels.data(az);\n  databoundLabels.enter().append('text').attr('class','azLabels');;\n  databoundLabels.exit().remove();\n  databoundLabels\n    .attr(\"x\", (d) =>{ return d.x; })\n    .attr(\"y\", (d) =>{ return d.y; })\n    .attr(\"dx\", (d) =>{ return 5; })\n    .attr(\"fill\", (d) =>{ return '#888'; })\n    .attr(\"font-size\", \"1em\")\n    .attr(\"font-family\", \"Arial\")\n    .attr(\"font-weight\", \"bold\")\n    .text( (d) =>{ return d.l; });\n}\n\nconst lineFunction = d3.svg.line()\n     .x(d =>{ return d.x; })\n     .y(d =>{ return d.y; })\n     .interpolate(\"linear\");\n","/home/ignacy/react/react-virtual-sky/src/VirtualSky/constellationLabels.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/projectionsConfig.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/galaxy.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/constellationLines.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/constllationBoundaries.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/stars.js",[],"/home/ignacy/react/react-virtual-sky/src/VirtualSky/i18n.js",["82","83","84","85","86","87","88","89","90","91","92"],"import ar from '../i18n/ar.json';\nimport cs from '../i18n/cs.json';\nimport de from '../i18n/de.json';\nimport en from '../i18n/en.json';\nimport es from '../i18n/es.json';\nimport fr from '../i18n/fr.json';\nimport gl from '../i18n/gl.json';\nimport it from '../i18n/it.json';\nimport nl from '../i18n/nl.json';\nimport pl from '../i18n/pl.json';\nimport pt from '../i18n/pt.json';\n\nexport const i18n = (lang) =>{\n    switch(lang){\n      case 'ar': return ar; break;\n      case 'cs': return cs; break;\n      case 'de': return de; break;\n      case 'en': return en; break;\n      case 'es': return es; break;\n      case 'fr': return fr; break;\n      case 'gl': return gl; break;\n      case 'it': return it; break;\n      case 'nl': return nl; break;\n      case 'pl': return pl; break;\n      case 'pt': return pt; break;\n      default: return en;\n    }\n}\n","/home/ignacy/react/react-virtual-sky/src/stories/VirtualSky.stories.js",[],"/home/ignacy/react/react-virtual-sky/src/stories/PolarAligment.stories.js",[],"/home/ignacy/react/react-virtual-sky/src/PolarAligment/PolarAligment.js",["93","94"],"/home/ignacy/react/react-virtual-sky/src/PolarAligment/drawers.js",[],{"ruleId":"95","severity":1,"message":"96","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":24},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"95","severity":1,"message":"103","line":328,"column":6,"nodeType":"97","messageId":"98","endLine":328,"endColumn":13},{"ruleId":"95","severity":1,"message":"104","line":333,"column":2,"nodeType":"97","messageId":"98","endLine":333,"endColumn":7},{"ruleId":"105","severity":1,"message":"106","line":403,"column":7,"nodeType":"97","messageId":"107","endLine":403,"endColumn":10},{"ruleId":"95","severity":1,"message":"108","line":1,"column":18,"nodeType":"97","messageId":"98","endLine":1,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":15,"column":29,"nodeType":"111","messageId":"112","endLine":15,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":16,"column":29,"nodeType":"111","messageId":"112","endLine":16,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":17,"column":29,"nodeType":"111","messageId":"112","endLine":17,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":18,"column":29,"nodeType":"111","messageId":"112","endLine":18,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":19,"column":29,"nodeType":"111","messageId":"112","endLine":19,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":20,"column":29,"nodeType":"111","messageId":"112","endLine":20,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":21,"column":29,"nodeType":"111","messageId":"112","endLine":21,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":22,"column":29,"nodeType":"111","messageId":"112","endLine":22,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":23,"column":29,"nodeType":"111","messageId":"112","endLine":23,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":24,"column":29,"nodeType":"111","messageId":"112","endLine":24,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":25,"column":29,"nodeType":"111","messageId":"112","endLine":25,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":16,"column":3,"nodeType":"97","endLine":16,"endColumn":12,"suggestions":"115"},{"ruleId":"95","severity":1,"message":"116","line":22,"column":11,"nodeType":"97","messageId":"98","endLine":22,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'angdiam' is assigned a value but never used.","'phase' is assigned a value but never used.","no-redeclare","'eps' is already defined.","redeclared","'ecliptic2xy' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRefresh'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [refresh, draw] as a second argument to the useEffect Hook.",["119"],"'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Add dependencies array: [refresh, draw]",{"range":"122","text":"123"},[517,517],", [refresh, draw]"]